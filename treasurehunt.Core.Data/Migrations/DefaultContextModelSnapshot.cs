// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using treasurehunt.Core.Data;

namespace treasurehunt.Core.Data.Migrations
{
    [DbContext(typeof(DefaultContext))]
    partial class DefaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Personnage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int")
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.ToTable("Personnages");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Personnage");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Elfe", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Elfe");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Humain", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Humain");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Nain", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Nain");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Personnages.Araignee", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Araignee");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Personnages.Dragon", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Dragon");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Personnages.Ours", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Ours");
                });

            modelBuilder.Entity("treasurehunt.Core.Data.Models.Personnages.Rat", b =>
                {
                    b.HasBaseType("treasurehunt.Core.Data.Models.Personnage");

                    b.HasDiscriminator().HasValue("Rat");
                });
#pragma warning restore 612, 618
        }
    }
}
